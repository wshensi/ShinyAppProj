shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("rsconnect")
rsconnect::setAccountInfo(name='wshensi',
token='0D315627D0633DF480F9122E8DDA731C',
secret='NFM6M/5ajwe9i8xd4vdlns8UKPVzzuzX9o4+S5f9')
runApp()
shiny::runApp()
library(shiny); runApp('app_v2.R')
install.packages(c(
"shiny", "tidyverse", "tsibble", "feasts", "fable", "fabletools",
"lubridate", "readr", "Rcpp", "RcppArmadillo", "distributional", "urca", "bslib"
))
install.packages(c("shiny", "tidyverse", "tsibble", "feasts", "fable", "fabletools", "lubridate", "readr", "Rcpp", "RcppArmadillo", "distributional", "urca", "bslib"))
# 设置个人包路径
custom_lib <- "C:/Rlibs"
if (!dir.exists(custom_lib)) dir.create(custom_lib)
.libPaths(c(custom_lib, .libPaths()))
# 所需包列表
required_packages <- c(
"shiny", "tidyverse", "tsibble", "feasts", "fable", "fabletools",
"lubridate", "readr", "Rcpp", "RcppArmadillo", "distributional", "urca", "bslib"
)
# 安装缺失包
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
message(paste("正在安装：", pkg))
install.packages(pkg)
} else {
message(paste("已安装：", pkg))
}
}
library(shiny)
runApp("app_v2.R")
runApp('app_v2.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
visNetwork(nodes, edges) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = TRUE) %>%
visLegend() %>%
visLayout(randomSeed = 42) %>%
visPhysics(stabilization = list(iterations = 100))
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp()
runApp('test/Test')
runApp('test/Test')
runApp('test/Test')
runApp()
runApp('test/Test')
runApp()
